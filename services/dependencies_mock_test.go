// Code generated by MockGen. DO NOT EDIT.
// Source: ./services/dependencies.go

// Package mock_services is a generated GoMock package.
package services

import (
	context "context"
	reflect "reflect"

	domain "gihub.com/gadhittana01/book-project/pkg/domain"
	gomock "github.com/golang/mock/gomock"
)

// MockBookResource is a mock of BookResource interface.
type MockBookResource struct {
	ctrl     *gomock.Controller
	recorder *MockBookResourceMockRecorder
}

// MockBookResourceMockRecorder is the mock recorder for MockBookResource.
type MockBookResourceMockRecorder struct {
	mock *MockBookResource
}

// NewMockBookResource creates a new mock instance.
func NewMockBookResource(ctrl *gomock.Controller) *MockBookResource {
	mock := &MockBookResource{ctrl: ctrl}
	mock.recorder = &MockBookResourceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBookResource) EXPECT() *MockBookResourceMockRecorder {
	return m.recorder
}

// BorrowBook mocks base method.
func (m *MockBookResource) BorrowBook(ctx context.Context, req domain.BorrowBookReq) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BorrowBook", ctx, req)
	ret0, _ := ret[0].(error)
	return ret0
}

// BorrowBook indicates an expected call of BorrowBook.
func (mr *MockBookResourceMockRecorder) BorrowBook(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BorrowBook", reflect.TypeOf((*MockBookResource)(nil).BorrowBook), ctx, req)
}

// GetBookByKey mocks base method.
func (m *MockBookResource) GetBookByKey(ctx context.Context, req domain.GeBookByKeyReq) (domain.Book, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBookByKey", ctx, req)
	ret0, _ := ret[0].(domain.Book)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBookByKey indicates an expected call of GetBookByKey.
func (mr *MockBookResourceMockRecorder) GetBookByKey(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBookByKey", reflect.TypeOf((*MockBookResource)(nil).GetBookByKey), ctx, req)
}

// GetBookReservation mocks base method.
func (m *MockBookResource) GetBookReservation(ctx context.Context, req domain.GetBookReservationReq) (map[int][]domain.BorrowBookReq, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBookReservation", ctx, req)
	ret0, _ := ret[0].(map[int][]domain.BorrowBookReq)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBookReservation indicates an expected call of GetBookReservation.
func (mr *MockBookResourceMockRecorder) GetBookReservation(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBookReservation", reflect.TypeOf((*MockBookResource)(nil).GetBookReservation), ctx, req)
}

// GetListOfBooks mocks base method.
func (m *MockBookResource) GetListOfBooks(ctx context.Context, req domain.GetListOfBooksReq) (domain.GetListOfBooksResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListOfBooks", ctx, req)
	ret0, _ := ret[0].(domain.GetListOfBooksResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetListOfBooks indicates an expected call of GetListOfBooks.
func (mr *MockBookResourceMockRecorder) GetListOfBooks(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListOfBooks", reflect.TypeOf((*MockBookResource)(nil).GetListOfBooks), ctx, req)
}