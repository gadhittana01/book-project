// Code generated by MockGen. DO NOT EDIT.
// Source: ./handler/resthttp/dependencies.go

// Package mock_resthttp is a generated GoMock package.
package resthttp

import (
	context "context"
	reflect "reflect"

	services "gihub.com/gadhittana01/book-project/services"
	gomock "github.com/golang/mock/gomock"
)

// MockBookService is a mock of BookService interface.
type MockBookService struct {
	ctrl     *gomock.Controller
	recorder *MockBookServiceMockRecorder
}

// MockBookServiceMockRecorder is the mock recorder for MockBookService.
type MockBookServiceMockRecorder struct {
	mock *MockBookService
}

// NewMockBookService creates a new mock instance.
func NewMockBookService(ctrl *gomock.Controller) *MockBookService {
	mock := &MockBookService{ctrl: ctrl}
	mock.recorder = &MockBookServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBookService) EXPECT() *MockBookServiceMockRecorder {
	return m.recorder
}

// BorrowBook mocks base method.
func (m *MockBookService) BorrowBook(ctx context.Context, req services.BorrowBookReq) (services.BorrowBookRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BorrowBook", ctx, req)
	ret0, _ := ret[0].(services.BorrowBookRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// BorrowBook indicates an expected call of BorrowBook.
func (mr *MockBookServiceMockRecorder) BorrowBook(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BorrowBook", reflect.TypeOf((*MockBookService)(nil).BorrowBook), ctx, req)
}

// GetBookReservation mocks base method.
func (m *MockBookService) GetBookReservation(ctx context.Context, req services.GetBookReservationReq) (map[int][]services.GetBookReservationRes, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBookReservation", ctx, req)
	ret0, _ := ret[0].(map[int][]services.GetBookReservationRes)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBookReservation indicates an expected call of GetBookReservation.
func (mr *MockBookServiceMockRecorder) GetBookReservation(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBookReservation", reflect.TypeOf((*MockBookService)(nil).GetBookReservation), ctx, req)
}

// GetListOfBooks mocks base method.
func (m *MockBookService) GetListOfBooks(ctx context.Context, req services.GetListOfBooksReq) (services.GetListOfBooksResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetListOfBooks", ctx, req)
	ret0, _ := ret[0].(services.GetListOfBooksResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetListOfBooks indicates an expected call of GetListOfBooks.
func (mr *MockBookServiceMockRecorder) GetListOfBooks(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetListOfBooks", reflect.TypeOf((*MockBookService)(nil).GetListOfBooks), ctx, req)
}